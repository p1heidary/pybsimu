# Makefile.in generated by automake 1.13.4 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libibsimu-1-0-6
pkgincludedir = $(includedir)/libibsimu-1-0-6
pkglibdir = $(libdir)/libibsimu-1-0-6
pkglibexecdir = $(libexecdir)/libibsimu-1-0-6
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = \
#gtkfielddiagdialog.cpp \
#gtkfielddiagdialog.hpp \
#gtkfielddiagexportdialog.cpp \
#gtkfielddiagexportdialog.hpp \
#gtkfielddiagwindow.cpp \
#gtkfielddiagwindow.hpp \
#gtkframewindow.cpp \
#gtkframewindow.hpp \
#gtkgeom3dwindow.cpp \
#gtkgeom3dwindow.hpp \
#gtkgeomwindow.cpp \
#gtkgeomwindow.hpp \
#gtkhardcopy.cpp \
#gtkhardcopy.hpp \
#gtkparticlediagdialog.cpp \
#gtkparticlediagdialog.hpp \
#gtkparticlediagexportdialog.cpp \
#gtkparticlediagexportdialog.hpp \
#gtkparticlediagwindow.cpp \
#gtkparticlediagwindow.hpp \
#gtkplotter.cpp \
#gtkplotter.hpp \
#gtkpreferences.cpp \
#gtkpreferences.hpp \
#gtkwindow.cpp \
#gtkwindow.hpp \
#icon_field_diag.hpp \
#icon_geom2d.hpp \
#icon_geom3d.hpp \
#icon_hardcopy.hpp \
#icon_move.hpp \
#icon_particle_diag.hpp \
#icon_track.hpp \
#icon_zoom_fit.hpp \
#icon_zoom_in.hpp \
#icon_zoom_out.hpp \
#icons.cpp \
#icons.hpp \
#softwarerenderer.cpp \
#softwarerenderer.hpp

#am__append_2 = \
#gtkplotter.hpp \
#gtkwindow.hpp

#am__append_3 = glrenderer.cpp glrenderer.hpp
#am__append_4 = epot_umfpacksolver.cpp epot_umfpacksolver.hpp 
#am__append_5 = epot_umfpacksolver.hpp 
#am__append_6 = csgobject_solid.cpp csgobject_solid.hpp
#am__append_7 = csgobject_solid.hpp
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(srcdir)/config.h.in $(top_srcdir)/depcomp \
	$(am__libibsimu_1_0_6_la_include_HEADERS_DIST)
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/check_zlib.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libibsimu_1_0_6_la_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libibsimu_1_0_6_la_LIBADD =
am__libibsimu_1_0_6_la_SOURCES_DIST = axisymmetricvectorfield.cpp \
	axisymmetricvectorfield.hpp callback.hpp ccolmatrix.cpp \
	ccolmatrix.hpp cfifo.hpp colormap.hpp compmath.cpp \
	compmath.hpp comptime.cpp comptime.hpp config.h config.hpp \
	constants.hpp convergence.cpp convergence.hpp coordmapper.hpp \
	coordmatrix.cpp coordmatrix.hpp crowmatrix.cpp crowmatrix.hpp \
	diag_precond.cpp diag_precond.hpp dxf_solid.cpp dxf_solid.hpp \
	empty_precond.hpp epot_bicgstabsolver.cpp \
	epot_bicgstabsolver.hpp epot_efield.cpp epot_efield.hpp \
	epot_field.cpp epot_field.hpp epot_gssolver.cpp \
	epot_gssolver.hpp epot_matrixsolver.cpp epot_matrixsolver.hpp \
	epot_mgsolver.cpp epot_mgsolver.hpp epot_mgsubsolver.cpp \
	epot_mgsubsolver.hpp epot_solver.cpp epot_solver.hpp \
	eqpotgraph.cpp eqpotgraph.hpp error.cpp error.hpp field.hpp \
	fielddiagplot.cpp fielddiagplot.hpp fielddiagplotter.cpp \
	fielddiagplotter.hpp fieldgraph.cpp fieldgraph.hpp file.cpp \
	file.hpp fonts.cpp fonts.hpp frame.cpp frame.hpp \
	func_solid.cpp func_solid.hpp geom3dplot.cpp geom3dplot.hpp \
	geometry.cpp geometry.hpp geomplot.cpp geomplot.hpp \
	geomplotter.cpp geomplotter.hpp graph.hpp graph3d.hpp hbio.cpp \
	hbio.hpp histogram.cpp histogram.hpp ibsimu.cpp ibsimu.hpp \
	ilu0_precond.cpp ilu0_precond.hpp ilu1_precond.cpp \
	ilu1_precond.hpp interpolation.cpp interpolation.hpp label.cpp \
	label.hpp legend.cpp legend.hpp lineclip.cpp lineclip.hpp \
	mat3d.cpp mat3d.hpp matrix.cpp matrix.hpp mesh.cpp mesh.hpp \
	meshcolormap.cpp meshcolormap.hpp meshgraph.cpp meshgraph.hpp \
	meshscalarfield.cpp meshscalarfield.hpp meshvectorfield.cpp \
	meshvectorfield.hpp multimeshvectorfield.cpp \
	multimeshvectorfield.hpp mvector.cpp mvector.hpp mydxfarc.cpp \
	mydxfarc.hpp mydxfblocks.cpp mydxfblocks.hpp mydxfcircle.cpp \
	mydxfcircle.hpp mydxfentities.cpp mydxfentities.hpp \
	mydxffile.cpp mydxffile.hpp mydxffont.cpp mydxffont.hpp \
	mydxfheader.cpp mydxfheader.hpp mydxfinsert.cpp \
	mydxfinsert.hpp mydxfline.cpp mydxfline.hpp \
	mydxflwpolyline.cpp mydxflwpolyline.hpp mydxfmtext.cpp \
	mydxfmtext.hpp mydxfspline.cpp mydxfspline.hpp mydxftables.cpp \
	mydxftables.hpp palette.cpp palette.hpp particledatabase.cpp \
	particledatabase.hpp particledatabaseimp.cpp \
	particledatabaseimp.hpp particlediagplot.cpp \
	particlediagplot.hpp particlediagplotter.cpp \
	particlediagplotter.hpp particlegraph.cpp particlegraph.hpp \
	particleiterator.cpp particleiterator.hpp particles.cpp \
	particles.hpp particlestatistics.cpp particlestatistics.hpp \
	plotter.cpp plotter.hpp polysolver.cpp polysolver.hpp \
	precond.hpp random.cpp random.hpp readascii.cpp readascii.hpp \
	renderer.cpp renderer.hpp ruler.cpp ruler.hpp scalarfield.hpp \
	scharge.cpp scharge.hpp scheduler.hpp solid.cpp solid.hpp \
	solidgraph.cpp solidgraph.hpp solver.hpp sort.cpp sort.hpp \
	statusprint.cpp statusprint.hpp stl_solid.cpp stl_solid.hpp \
	stlfile.cpp stlfile.hpp symbols.hpp timer.cpp timer.hpp \
	trajectory.cpp trajectory.hpp trajectorydiagnostics.cpp \
	trajectorydiagnostics.hpp transformation.cpp \
	transformation.hpp types.cpp types.hpp vec3d.cpp vec3d.hpp \
	vec4d.cpp vec4d.hpp vectorfield.cpp vectorfield.hpp \
	vtriangle.cpp vtriangle.hpp xygraph.cpp xygraph.hpp \
	gtkfielddiagdialog.cpp gtkfielddiagdialog.hpp \
	gtkfielddiagexportdialog.cpp gtkfielddiagexportdialog.hpp \
	gtkfielddiagwindow.cpp gtkfielddiagwindow.hpp \
	gtkframewindow.cpp gtkframewindow.hpp gtkgeom3dwindow.cpp \
	gtkgeom3dwindow.hpp gtkgeomwindow.cpp gtkgeomwindow.hpp \
	gtkhardcopy.cpp gtkhardcopy.hpp gtkparticlediagdialog.cpp \
	gtkparticlediagdialog.hpp gtkparticlediagexportdialog.cpp \
	gtkparticlediagexportdialog.hpp gtkparticlediagwindow.cpp \
	gtkparticlediagwindow.hpp gtkplotter.cpp gtkplotter.hpp \
	gtkpreferences.cpp gtkpreferences.hpp gtkwindow.cpp \
	gtkwindow.hpp icon_field_diag.hpp icon_geom2d.hpp \
	icon_geom3d.hpp icon_hardcopy.hpp icon_move.hpp \
	icon_particle_diag.hpp icon_track.hpp icon_zoom_fit.hpp \
	icon_zoom_in.hpp icon_zoom_out.hpp icons.cpp icons.hpp \
	softwarerenderer.cpp softwarerenderer.hpp glrenderer.cpp \
	glrenderer.hpp epot_umfpacksolver.cpp epot_umfpacksolver.hpp \
	csgobject_solid.cpp csgobject_solid.hpp
#am__objects_1 = gtkfielddiagdialog.lo \
#	gtkfielddiagexportdialog.lo gtkfielddiagwindow.lo \
#	gtkframewindow.lo gtkgeom3dwindow.lo \
#	gtkgeomwindow.lo gtkhardcopy.lo \
#	gtkparticlediagdialog.lo \
#	gtkparticlediagexportdialog.lo \
#	gtkparticlediagwindow.lo gtkplotter.lo \
#	gtkpreferences.lo gtkwindow.lo icons.lo \
#	softwarerenderer.lo
#am__objects_2 = glrenderer.lo
#am__objects_3 = epot_umfpacksolver.lo
#am__objects_4 = csgobject_solid.lo
am_libibsimu_1_0_6_la_OBJECTS = axisymmetricvectorfield.lo \
	ccolmatrix.lo compmath.lo comptime.lo convergence.lo \
	coordmatrix.lo crowmatrix.lo diag_precond.lo dxf_solid.lo \
	epot_bicgstabsolver.lo epot_efield.lo epot_field.lo \
	epot_gssolver.lo epot_matrixsolver.lo epot_mgsolver.lo \
	epot_mgsubsolver.lo epot_solver.lo eqpotgraph.lo error.lo \
	fielddiagplot.lo fielddiagplotter.lo fieldgraph.lo file.lo \
	fonts.lo frame.lo func_solid.lo geom3dplot.lo geometry.lo \
	geomplot.lo geomplotter.lo hbio.lo histogram.lo ibsimu.lo \
	ilu0_precond.lo ilu1_precond.lo interpolation.lo label.lo \
	legend.lo lineclip.lo mat3d.lo matrix.lo mesh.lo \
	meshcolormap.lo meshgraph.lo meshscalarfield.lo \
	meshvectorfield.lo multimeshvectorfield.lo mvector.lo \
	mydxfarc.lo mydxfblocks.lo mydxfcircle.lo mydxfentities.lo \
	mydxffile.lo mydxffont.lo mydxfheader.lo mydxfinsert.lo \
	mydxfline.lo mydxflwpolyline.lo mydxfmtext.lo mydxfspline.lo \
	mydxftables.lo palette.lo particledatabase.lo \
	particledatabaseimp.lo particlediagplot.lo \
	particlediagplotter.lo particlegraph.lo particleiterator.lo \
	particles.lo particlestatistics.lo plotter.lo polysolver.lo \
	random.lo readascii.lo renderer.lo ruler.lo scharge.lo \
	solid.lo solidgraph.lo sort.lo statusprint.lo stl_solid.lo \
	stlfile.lo timer.lo trajectory.lo trajectorydiagnostics.lo \
	transformation.lo types.lo vec3d.lo vec4d.lo vectorfield.lo \
	vtriangle.lo xygraph.lo $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
libibsimu_1_0_6_la_OBJECTS = $(am_libibsimu_1_0_6_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libibsimu_1_0_6_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libibsimu_1_0_6_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libibsimu_1_0_6_la_SOURCES)
DIST_SOURCES = $(am__libibsimu_1_0_6_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__libibsimu_1_0_6_la_include_HEADERS_DIST =  \
	axisymmetricvectorfield.hpp callback.hpp ccolmatrix.hpp \
	cfifo.hpp colormap.hpp config.h constants.hpp convergence.hpp \
	compmath.hpp comptime.hpp coordmapper.hpp coordmatrix.hpp \
	crowmatrix.hpp diag_precond.hpp dxf_solid.hpp \
	empty_precond.hpp epot_bicgstabsolver.hpp epot_efield.hpp \
	epot_field.hpp epot_gssolver.hpp epot_matrixsolver.hpp \
	epot_mgsolver.hpp epot_mgsubsolver.hpp epot_solver.hpp \
	eqpotgraph.hpp error.hpp field.hpp fielddiagplot.hpp \
	fielddiagplotter.hpp fieldgraph.hpp file.hpp fonts.hpp \
	frame.hpp func_solid.hpp geometry.hpp geomplot.hpp \
	geomplotter.hpp graph.hpp graph3d.hpp hbio.hpp histogram.hpp \
	ibsimu.hpp ilu0_precond.hpp ilu1_precond.hpp interpolation.hpp \
	label.hpp legend.hpp lineclip.hpp mat3d.hpp matrix.hpp \
	mesh.hpp meshcolormap.hpp meshgraph.hpp meshscalarfield.hpp \
	meshvectorfield.hpp multimeshvectorfield.hpp mvector.hpp \
	mydxfarc.hpp mydxfblocks.hpp mydxfcircle.hpp mydxfentities.hpp \
	mydxffile.hpp mydxffont.hpp mydxfheader.hpp mydxfinsert.hpp \
	mydxfline.hpp mydxflwpolyline.hpp mydxfmtext.hpp \
	mydxfspline.hpp mydxftables.hpp palette.hpp \
	particledatabase.hpp particlediagplot.hpp \
	particlediagplotter.hpp particlegraph.hpp particleiterator.hpp \
	particles.hpp particlestatistics.hpp plotter.hpp \
	polysolver.hpp precond.hpp random.hpp readascii.hpp ruler.hpp \
	scalarfield.hpp scharge.hpp scheduler.hpp solid.hpp \
	solidgraph.hpp solver.hpp sort.hpp statusprint.hpp stlfile.hpp \
	stl_solid.hpp timer.hpp trajectory.hpp \
	trajectorydiagnostics.hpp transformation.hpp types.hpp \
	vec3d.hpp vec4d.hpp vectorfield.hpp vtriangle.hpp xygraph.hpp \
	gtkplotter.hpp gtkwindow.hpp epot_umfpacksolver.hpp \
	csgobject_solid.hpp
HEADERS = $(libibsimu_1_0_6_la_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pory/ibsimu/libibsimu-1.0.6/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/pory/ibsimu/libibsimu-1.0.6/missing autoconf
AUTOHEADER = ${SHELL} /home/pory/ibsimu/libibsimu-1.0.6/missing autoheader
AUTOMAKE = ${SHELL} /home/pory/ibsimu/libibsimu-1.0.6/missing automake-1.13
AWK = gawk
CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng12 
CAIRO_LIBS = -lcairo 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -g -O2  -I/usr/include -DSIGSEGV_STACK  -I/usr/include/libpng12  -I/usr/include/freetype2  -I/usr/include/freetype2  -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng12  -pthread 
CSG_CFLAGS = 
CSG_COND = 
CSG_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
FONTCONFIG_CFLAGS = -I/usr/include/freetype2 
FONTCONFIG_LIBS = -lfontconfig -lfreetype 
FREETYPE_CFLAGS = -I/usr/include/freetype2 
FREETYPE_LIBS = -lfreetype 
GREP = /usr/bin/grep
GSL_CFLAGS = 
GSL_LIBS = -lgsl -lgslcblas -lm 
GTK3_CFLAGS = 
GTK3_COND = 
GTK3_LIBS = 
GTKGLEXT_CFLAGS = 
GTKGLEXT_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/x86_64-suse-linux/bin/ld -m elf_x86_64
LDFLAGS =  -L/usr/lib
LIBM = -lm
LIBOBJS = 
LIBPNG_CFLAGS = -I/usr/include/libpng12 
LIBPNG_LIBS = -lpng12 
LIBS = -lrt -lz  -lm  -lpng12  -lfontconfig -lfreetype  -lfreetype  -lcairo   -pthread -lgsl -lgslcblas -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/pory/ibsimu/libibsimu-1.0.6/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_COND = 
OTOOL = 
OTOOL64 = 
PACKAGE = libibsimu-1-0-6
PACKAGE_BUGREPORT = taneli.kalvas@jyu.fi
PACKAGE_NAME = libibsimu-1.0.6
PACKAGE_STRING = libibsimu-1.0.6 1.0.6
PACKAGE_TARNAME = libibsimu-1-0-6
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.6
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UMFPACK_CFLAGS = 
UMFPACK_COND = 
UMFPACK_LIBS = 
VERSION = 1.0.6
abs_builddir = /home/pory/ibsimu/libibsimu-1.0.6/src
abs_srcdir = /home/pory/ibsimu/libibsimu-1.0.6/src
abs_top_builddir = /home/pory/ibsimu/libibsimu-1.0.6
abs_top_srcdir = /home/pory/ibsimu/libibsimu-1.0.6
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
grep = /usr/bin/grep
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/pory/ibsimu/libibsimu-1.0.6/install-sh
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_enable_auto_import = 
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
rdynamic_flag = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libibsimu-1.0.6.la
libibsimu_1_0_6_la_LDFLAGS = -version-info 0:1:0
AM_LDFLAGS = -Wall  
AM_CPPFLAGS = -Wall
libibsimu_1_0_6_la_SOURCES = axisymmetricvectorfield.cpp \
	axisymmetricvectorfield.hpp callback.hpp ccolmatrix.cpp \
	ccolmatrix.hpp cfifo.hpp colormap.hpp compmath.cpp \
	compmath.hpp comptime.cpp comptime.hpp config.h config.hpp \
	constants.hpp convergence.cpp convergence.hpp coordmapper.hpp \
	coordmatrix.cpp coordmatrix.hpp crowmatrix.cpp crowmatrix.hpp \
	diag_precond.cpp diag_precond.hpp dxf_solid.cpp dxf_solid.hpp \
	empty_precond.hpp epot_bicgstabsolver.cpp \
	epot_bicgstabsolver.hpp epot_efield.cpp epot_efield.hpp \
	epot_field.cpp epot_field.hpp epot_gssolver.cpp \
	epot_gssolver.hpp epot_matrixsolver.cpp epot_matrixsolver.hpp \
	epot_mgsolver.cpp epot_mgsolver.hpp epot_mgsubsolver.cpp \
	epot_mgsubsolver.hpp epot_solver.cpp epot_solver.hpp \
	eqpotgraph.cpp eqpotgraph.hpp error.cpp error.hpp field.hpp \
	fielddiagplot.cpp fielddiagplot.hpp fielddiagplotter.cpp \
	fielddiagplotter.hpp fieldgraph.cpp fieldgraph.hpp file.cpp \
	file.hpp fonts.cpp fonts.hpp frame.cpp frame.hpp \
	func_solid.cpp func_solid.hpp geom3dplot.cpp geom3dplot.hpp \
	geometry.cpp geometry.hpp geomplot.cpp geomplot.hpp \
	geomplotter.cpp geomplotter.hpp graph.hpp graph3d.hpp hbio.cpp \
	hbio.hpp histogram.cpp histogram.hpp ibsimu.cpp ibsimu.hpp \
	ilu0_precond.cpp ilu0_precond.hpp ilu1_precond.cpp \
	ilu1_precond.hpp interpolation.cpp interpolation.hpp label.cpp \
	label.hpp legend.cpp legend.hpp lineclip.cpp lineclip.hpp \
	mat3d.cpp mat3d.hpp matrix.cpp matrix.hpp mesh.cpp mesh.hpp \
	meshcolormap.cpp meshcolormap.hpp meshgraph.cpp meshgraph.hpp \
	meshscalarfield.cpp meshscalarfield.hpp meshvectorfield.cpp \
	meshvectorfield.hpp multimeshvectorfield.cpp \
	multimeshvectorfield.hpp mvector.cpp mvector.hpp mydxfarc.cpp \
	mydxfarc.hpp mydxfblocks.cpp mydxfblocks.hpp mydxfcircle.cpp \
	mydxfcircle.hpp mydxfentities.cpp mydxfentities.hpp \
	mydxffile.cpp mydxffile.hpp mydxffont.cpp mydxffont.hpp \
	mydxfheader.cpp mydxfheader.hpp mydxfinsert.cpp \
	mydxfinsert.hpp mydxfline.cpp mydxfline.hpp \
	mydxflwpolyline.cpp mydxflwpolyline.hpp mydxfmtext.cpp \
	mydxfmtext.hpp mydxfspline.cpp mydxfspline.hpp mydxftables.cpp \
	mydxftables.hpp palette.cpp palette.hpp particledatabase.cpp \
	particledatabase.hpp particledatabaseimp.cpp \
	particledatabaseimp.hpp particlediagplot.cpp \
	particlediagplot.hpp particlediagplotter.cpp \
	particlediagplotter.hpp particlegraph.cpp particlegraph.hpp \
	particleiterator.cpp particleiterator.hpp particles.cpp \
	particles.hpp particlestatistics.cpp particlestatistics.hpp \
	plotter.cpp plotter.hpp polysolver.cpp polysolver.hpp \
	precond.hpp random.cpp random.hpp readascii.cpp readascii.hpp \
	renderer.cpp renderer.hpp ruler.cpp ruler.hpp scalarfield.hpp \
	scharge.cpp scharge.hpp scheduler.hpp solid.cpp solid.hpp \
	solidgraph.cpp solidgraph.hpp solver.hpp sort.cpp sort.hpp \
	statusprint.cpp statusprint.hpp stl_solid.cpp stl_solid.hpp \
	stlfile.cpp stlfile.hpp symbols.hpp timer.cpp timer.hpp \
	trajectory.cpp trajectory.hpp trajectorydiagnostics.cpp \
	trajectorydiagnostics.hpp transformation.cpp \
	transformation.hpp types.cpp types.hpp vec3d.cpp vec3d.hpp \
	vec4d.cpp vec4d.hpp vectorfield.cpp vectorfield.hpp \
	vtriangle.cpp vtriangle.hpp xygraph.cpp xygraph.hpp \
	$(am__append_1) $(am__append_3) $(am__append_4) \
	$(am__append_6)
libibsimu_1_0_6_la_includedir = $(includedir)/ibsimu-1.0.6
libibsimu_1_0_6_la_include_HEADERS = axisymmetricvectorfield.hpp \
	callback.hpp ccolmatrix.hpp cfifo.hpp colormap.hpp config.h \
	constants.hpp convergence.hpp compmath.hpp comptime.hpp \
	coordmapper.hpp coordmatrix.hpp crowmatrix.hpp \
	diag_precond.hpp dxf_solid.hpp empty_precond.hpp \
	epot_bicgstabsolver.hpp epot_efield.hpp epot_field.hpp \
	epot_gssolver.hpp epot_matrixsolver.hpp epot_mgsolver.hpp \
	epot_mgsubsolver.hpp epot_solver.hpp eqpotgraph.hpp error.hpp \
	field.hpp fielddiagplot.hpp fielddiagplotter.hpp \
	fieldgraph.hpp file.hpp fonts.hpp frame.hpp func_solid.hpp \
	geometry.hpp geomplot.hpp geomplotter.hpp graph.hpp \
	graph3d.hpp hbio.hpp histogram.hpp ibsimu.hpp ilu0_precond.hpp \
	ilu1_precond.hpp interpolation.hpp label.hpp legend.hpp \
	lineclip.hpp mat3d.hpp matrix.hpp mesh.hpp meshcolormap.hpp \
	meshgraph.hpp meshscalarfield.hpp meshvectorfield.hpp \
	multimeshvectorfield.hpp mvector.hpp mydxfarc.hpp \
	mydxfblocks.hpp mydxfcircle.hpp mydxfentities.hpp \
	mydxffile.hpp mydxffont.hpp mydxfheader.hpp mydxfinsert.hpp \
	mydxfline.hpp mydxflwpolyline.hpp mydxfmtext.hpp \
	mydxfspline.hpp mydxftables.hpp palette.hpp \
	particledatabase.hpp particlediagplot.hpp \
	particlediagplotter.hpp particlegraph.hpp particleiterator.hpp \
	particles.hpp particlestatistics.hpp plotter.hpp \
	polysolver.hpp precond.hpp random.hpp readascii.hpp ruler.hpp \
	scalarfield.hpp scharge.hpp scheduler.hpp solid.hpp \
	solidgraph.hpp solver.hpp sort.hpp statusprint.hpp stlfile.hpp \
	stl_solid.hpp timer.hpp trajectory.hpp \
	trajectorydiagnostics.hpp transformation.hpp types.hpp \
	vec3d.hpp vec4d.hpp vectorfield.hpp vtriangle.hpp xygraph.hpp \
	$(am__append_2) $(am__append_5) $(am__append_7)
EXTRA_DIST = \
id.hpp

CLEANFILES = *~
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libibsimu-1.0.6.la: $(libibsimu_1_0_6_la_OBJECTS) $(libibsimu_1_0_6_la_DEPENDENCIES) $(EXTRA_libibsimu_1_0_6_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libibsimu_1_0_6_la_LINK) -rpath $(libdir) $(libibsimu_1_0_6_la_OBJECTS) $(libibsimu_1_0_6_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/axisymmetricvectorfield.Plo
include ./$(DEPDIR)/ccolmatrix.Plo
include ./$(DEPDIR)/compmath.Plo
include ./$(DEPDIR)/comptime.Plo
include ./$(DEPDIR)/convergence.Plo
include ./$(DEPDIR)/coordmatrix.Plo
include ./$(DEPDIR)/crowmatrix.Plo
include ./$(DEPDIR)/csgobject_solid.Plo
include ./$(DEPDIR)/diag_precond.Plo
include ./$(DEPDIR)/dxf_solid.Plo
include ./$(DEPDIR)/epot_bicgstabsolver.Plo
include ./$(DEPDIR)/epot_efield.Plo
include ./$(DEPDIR)/epot_field.Plo
include ./$(DEPDIR)/epot_gssolver.Plo
include ./$(DEPDIR)/epot_matrixsolver.Plo
include ./$(DEPDIR)/epot_mgsolver.Plo
include ./$(DEPDIR)/epot_mgsubsolver.Plo
include ./$(DEPDIR)/epot_solver.Plo
include ./$(DEPDIR)/epot_umfpacksolver.Plo
include ./$(DEPDIR)/eqpotgraph.Plo
include ./$(DEPDIR)/error.Plo
include ./$(DEPDIR)/fielddiagplot.Plo
include ./$(DEPDIR)/fielddiagplotter.Plo
include ./$(DEPDIR)/fieldgraph.Plo
include ./$(DEPDIR)/file.Plo
include ./$(DEPDIR)/fonts.Plo
include ./$(DEPDIR)/frame.Plo
include ./$(DEPDIR)/func_solid.Plo
include ./$(DEPDIR)/geom3dplot.Plo
include ./$(DEPDIR)/geometry.Plo
include ./$(DEPDIR)/geomplot.Plo
include ./$(DEPDIR)/geomplotter.Plo
include ./$(DEPDIR)/glrenderer.Plo
include ./$(DEPDIR)/gtkfielddiagdialog.Plo
include ./$(DEPDIR)/gtkfielddiagexportdialog.Plo
include ./$(DEPDIR)/gtkfielddiagwindow.Plo
include ./$(DEPDIR)/gtkframewindow.Plo
include ./$(DEPDIR)/gtkgeom3dwindow.Plo
include ./$(DEPDIR)/gtkgeomwindow.Plo
include ./$(DEPDIR)/gtkhardcopy.Plo
include ./$(DEPDIR)/gtkparticlediagdialog.Plo
include ./$(DEPDIR)/gtkparticlediagexportdialog.Plo
include ./$(DEPDIR)/gtkparticlediagwindow.Plo
include ./$(DEPDIR)/gtkplotter.Plo
include ./$(DEPDIR)/gtkpreferences.Plo
include ./$(DEPDIR)/gtkwindow.Plo
include ./$(DEPDIR)/hbio.Plo
include ./$(DEPDIR)/histogram.Plo
include ./$(DEPDIR)/ibsimu.Plo
include ./$(DEPDIR)/icons.Plo
include ./$(DEPDIR)/ilu0_precond.Plo
include ./$(DEPDIR)/ilu1_precond.Plo
include ./$(DEPDIR)/interpolation.Plo
include ./$(DEPDIR)/label.Plo
include ./$(DEPDIR)/legend.Plo
include ./$(DEPDIR)/lineclip.Plo
include ./$(DEPDIR)/mat3d.Plo
include ./$(DEPDIR)/matrix.Plo
include ./$(DEPDIR)/mesh.Plo
include ./$(DEPDIR)/meshcolormap.Plo
include ./$(DEPDIR)/meshgraph.Plo
include ./$(DEPDIR)/meshscalarfield.Plo
include ./$(DEPDIR)/meshvectorfield.Plo
include ./$(DEPDIR)/multimeshvectorfield.Plo
include ./$(DEPDIR)/mvector.Plo
include ./$(DEPDIR)/mydxfarc.Plo
include ./$(DEPDIR)/mydxfblocks.Plo
include ./$(DEPDIR)/mydxfcircle.Plo
include ./$(DEPDIR)/mydxfentities.Plo
include ./$(DEPDIR)/mydxffile.Plo
include ./$(DEPDIR)/mydxffont.Plo
include ./$(DEPDIR)/mydxfheader.Plo
include ./$(DEPDIR)/mydxfinsert.Plo
include ./$(DEPDIR)/mydxfline.Plo
include ./$(DEPDIR)/mydxflwpolyline.Plo
include ./$(DEPDIR)/mydxfmtext.Plo
include ./$(DEPDIR)/mydxfspline.Plo
include ./$(DEPDIR)/mydxftables.Plo
include ./$(DEPDIR)/palette.Plo
include ./$(DEPDIR)/particledatabase.Plo
include ./$(DEPDIR)/particledatabaseimp.Plo
include ./$(DEPDIR)/particlediagplot.Plo
include ./$(DEPDIR)/particlediagplotter.Plo
include ./$(DEPDIR)/particlegraph.Plo
include ./$(DEPDIR)/particleiterator.Plo
include ./$(DEPDIR)/particles.Plo
include ./$(DEPDIR)/particlestatistics.Plo
include ./$(DEPDIR)/plotter.Plo
include ./$(DEPDIR)/polysolver.Plo
include ./$(DEPDIR)/random.Plo
include ./$(DEPDIR)/readascii.Plo
include ./$(DEPDIR)/renderer.Plo
include ./$(DEPDIR)/ruler.Plo
include ./$(DEPDIR)/scharge.Plo
include ./$(DEPDIR)/softwarerenderer.Plo
include ./$(DEPDIR)/solid.Plo
include ./$(DEPDIR)/solidgraph.Plo
include ./$(DEPDIR)/sort.Plo
include ./$(DEPDIR)/statusprint.Plo
include ./$(DEPDIR)/stl_solid.Plo
include ./$(DEPDIR)/stlfile.Plo
include ./$(DEPDIR)/timer.Plo
include ./$(DEPDIR)/trajectory.Plo
include ./$(DEPDIR)/trajectorydiagnostics.Plo
include ./$(DEPDIR)/transformation.Plo
include ./$(DEPDIR)/types.Plo
include ./$(DEPDIR)/vec3d.Plo
include ./$(DEPDIR)/vec4d.Plo
include ./$(DEPDIR)/vectorfield.Plo
include ./$(DEPDIR)/vtriangle.Plo
include ./$(DEPDIR)/xygraph.Plo

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libibsimu_1_0_6_la_includeHEADERS: $(libibsimu_1_0_6_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libibsimu_1_0_6_la_include_HEADERS)'; test -n "$(libibsimu_1_0_6_la_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libibsimu_1_0_6_la_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libibsimu_1_0_6_la_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libibsimu_1_0_6_la_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libibsimu_1_0_6_la_includedir)" || exit $$?; \
	done

uninstall-libibsimu_1_0_6_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libibsimu_1_0_6_la_include_HEADERS)'; test -n "$(libibsimu_1_0_6_la_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libibsimu_1_0_6_la_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libibsimu_1_0_6_la_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libibsimu_1_0_6_la_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libibsimu_1_0_6_la_includeHEADERS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libibsimu_1_0_6_la_includeHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES \
	uninstall-libibsimu_1_0_6_la_includeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
